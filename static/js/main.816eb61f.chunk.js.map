{"version":3,"sources":["components/WebContext.js","constants/Colors.js","constants/iconStyles.js","components/MainLayout.js","ajax.js","db.js","components/SourceButton.js","screens/SelectSourceScreen.js","screens/RequestContentScreen.js","components/RequestDisplay.js","screens/RequestsListScreen.js","screens/AddRequestScreen.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","headerBackground","headerTitle","videoControlIcons","ICON_SIZE","mainIconStyle","color","Colors","fontSize","MainLayout","props","context","useContext","WebContext","addRequest","style","width","currentScreen","onClick","setCurrentScreen","leftIcon","styles","screen","header","title","content","children","height","display","flexDirection","backgroundColor","justifyContent","padding","alignItems","flexGrow","serverURL","sendRequest","request","a","async","URL","fetch","method","body","JSON","stringify","headers","response","resp","ok","json","getContent","downloadYoutubeVideo","links","then","blob","video","db","initializeDB","Dexie","version","stores","requests","console","log","toArray","putContentElement","requestId","put","id","getVideo","where","equals","SourceButton","borderRadius","marginTop","text","fontWeight","SelectSourceScreen","sourceClickHandler","source","setSource","sourceElements","sources","map","s","bind","key","RequestContextScreen","videoRef","useRef","useEffect","current","dbCalls","currentRequest","videoBlob","src","window","createObjectURL","type","controls","ref","link","filter","item","indexOf","href","ajax","RequestDisplay","firstColumn","downloaded","setCurrentRequest","infos","mode","status","query","dispatchAllRequests","reqId","delete","size","margin","maxWidth","marginRight","borderBottomColor","borderBottomWidth","marginHorizontal","marginVertical","RequestsListScreen","isDownloadedRequest","req","reqElements","allRequests","AddRequestScreen","useState","setQuery","setVideo","level","setLevel","videoSwitch","FormControlLabel","labelPlacement","label","control","Switch","checked","onChange","value","inputProps","levelSelect","FormControl","InputLabel","Select","labelId","e","target","MenuItem","TextField","buttons","Button","nextRequestId","getNextRequestId","user_id","userId","newReq","minHeight","textInput","levelPicker","reducerReqs","reqs","action","newRequest","serverRequest","server_request_id","newRequest2","serverResponse","newRequest3","Error","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","useReducer","SCREENS","SelectSource","RequestsList","RequestContent","RequestContentScreen","AddRequest","length","Math","max","initializeRequests","bulkPut","reqsOk","promises","Promise","all","res","forEach","sendRequestsServer","getContentRequests","videos","counter","downloadYoutubeLocally","MainContent","Provider","document","getElementById","process","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.816eb61f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default React.createContext({});","export default {\n    headerBackground: \"#0C1B33\",\n    headerTitle: \"#F4E87C\",\n    videoControlIcons: \"#46d6e3\",\n}","import Colors from \"./Colors\";\nexport const ICON_SIZE = 30;\n\nexport const mainIconStyle = {\n    color: Colors.headerTitle,\n    fontSize: ICON_SIZE\n};\n\nexport const videoIconStyle = {\n    fontSize: ICON_SIZE,\n    color: Colors.videoControlIcons,\n};","import React, { useContext } from \"react\";\nimport Colors from \"../constants/Colors\";\nimport WebContext from \"./WebContext\";\nimport { mainIconStyle, ICON_SIZE } from \"../constants/iconStyles\";\n\n// Import Icons\nimport Add from \"@material-ui/icons/Add\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport Home from \"@material-ui/icons/Home\";\n\n\nexport default function MainLayout(props) {\n  const context = useContext(WebContext);\n\n  // Add + at RHS if currentScreen==RequestsList\n  let addRequest = <div style={{ width: ICON_SIZE }}></div>;\n  if (context.currentScreen === \"RequestsList\") addRequest = (\n    <div onClick={() => context.setCurrentScreen(\"AddRequest\")}>\n      <Add style={mainIconStyle} />\n    </div>\n  );\n\n  // Add Left Button\n  let leftIcon = <div style={{ width: ICON_SIZE }}></div>;\n  if (context.currentScreen === \"RequestContent\") leftIcon = (\n    <div onClick={() => context.setCurrentScreen(\"RequestsList\")} >\n      <ArrowBack style={mainIconStyle} />\n    </div>\n  );\n  else if (context.currentScreen !== \"SelectSource\") leftIcon = (\n    <div onClick={() => context.setCurrentScreen(\"SelectSource\")} >\n      <Home style={mainIconStyle} />\n    </div>\n  );\n\n  return (\n    <div style={styles.screen}>\n      <div style={styles.header}>\n        {leftIcon}\n        <div style={styles.title}>{props.title}</div>\n        {addRequest}\n      </div>\n      <div style={styles.content}>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  screen: {\n    height: \"100%\",\n    // backgroundColor: \"green\"\n    display: \"flex\",\n    flexDirection: \"column\",\n\n  },\n\n  header: {\n    height: 60,\n    backgroundColor: Colors.headerBackground,\n    justifyContent: \"space-between\",\n    padding: \"0 3vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n\n  title: {\n    color: Colors.headerTitle,\n    fontSize: 20,\n  },\n\n  content: {\n    flexGrow: 1,\n  }\n\n};","export const serverURL = \"http://192.168.43.73:5000/\";\n\nexport async function getWikitravelAsset(assetPath) {\n  const response = await fetch(serverURL+assetPath)\n  return response;\n}\n\n// Function to add request to the server\nexport async function sendRequest(request) {\n  const URL = serverURL + \"add_request\"\n\n  const response = await fetch(URL, {\n    method: \"POST\",\n    body: JSON.stringify(request),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  let resp = null;\n\n  if (response.ok) resp = await response.json();\n\n  return resp;\n}\n\n// Function to get content from server\nexport async function getContent(request) {\n  const URL = serverURL + \"send_results\";\n\n  const response = await fetch(URL, {\n    method: \"POST\",\n    body: JSON.stringify(request),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  let resp = await response.json();\n  return resp;\n}\n\n// Function to backup requests\nexport async function backupRequests(userId, requests) {\n  const URL = serverURL + `backup/${userId}`;\n  \n  const response = await fetch(URL, {\n    method: \"POST\",\n    body: JSON.stringify(requests),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  const res = await response.json();\n\n  return res;\n}\n\n// Function to get backup responses\nexport async function getBackupRequests(userId) {\n  const URL = serverURL + `backup/${userId}`;\n\n  const response = await fetch(URL, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  const resp = await response.json();\n\n  return resp;\n}\n\n// Download youtube video\nexport async function downloadYoutubeVideo(request) {\n  const URL = serverURL + request.links[0];\n  const video = await fetch(URL).then(resp => resp.blob())\n  // console.log(\"downloadYoutubeVideo\", video);\n  return video;\n}\n","import Dexie from \"dexie\";\n\nlet db = null;\n\n// Declaration of database\n// Returns list of requests\nexport async function initializeDB() {\n  db = new Dexie(\"requests\");\n  db.version(1).stores({\n    requests: \"id, query, status, type, mode, server_request_id\",\n    content: \"id\"\n  });\n  console.log(\"Database Initialized\");\n  const requests = await db.requests.toArray();\n  return requests;\n}\n\nexport async function putAllRequestElements(requests) {\n  console.log(\"putting all requests to db\", requests);\n  const response = await db.requests.bulkPut(requests);\n  console.log(\"response\", response);\n}\n\nexport async function putRequestElement(request) {\n  console.log(\"putting request to db\", request);\n  const response = await db.requests.put(request);\n  console.log(\"response\", response);\n}\n\nexport async function putContentElement(requestId, content) {\n  console.log(\"Adding content for requestId\", requestId, content);\n  const response = await db.content.put({ id: requestId, content });\n  console.log(\"response\", response);\n}\n\nexport async function removeRequestElement(requestId) {\n  const response = await db.requests.delete(requestId);\n  return response;\n\n}\n\nexport async function removeContent(requestId) {\n  const response = await db.content.delete(requestId);\n  return response;\n}\n\nexport async function getVideo(requestId) {\n  const response = await db.content.where(\"id\").equals(requestId).toArray();\n  return response[0].content;\n}","import React from \"react\";\nimport Colors from \"../constants/Colors\";\n\nexport default function SourceButton(props) {\n  \n\n  const styles = {\n    screen: {\n      // backgroundColor: Colors.headerTitle,\n      backgroundColor: props.title===\"Youtube\" ? \"black\" : \"white\",\n      borderRadius: 10,\n      // alignSelf: \"center\",\n      // justifyContent: \"center\",\n      // alignItems: \"center\",\n      marginTop: \"10px\",\n      padding: \"5px\",\n      //background: #eaeaea,\n      // minHeight: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100px\",\n      width: \"100vw\",\n\n      /* Flex Fallback */\n      //marginLeft: \"5vw\",\n      //marginRight: \"5vw\",\n      //flex: 1 1 0.2*context.vw,\n    },\n\n    text: {\n      fontSize: 30,\n      color: Colors.headerBackground,\n      fontWeight: \"bold\",\n    }\n  };\n\n  // const radiusCircle = 35 + 4*context.vh;\n\n  // const styles = {\n  //   screen: {\n  //     backgroundColor: Colors.headerBackground,\n  //     borderRadius: 3,\n  //     alignSelf: \"center\",\n  //     justifyContent: \"center\",\n  //     alignItems: \"center\",\n  //     marginTop: 5*context.vh,\n  //     padding: 5,\n  //   },\n\n  //   text: {\n  //     fontSize: 18,\n  //     color: props.textColor || Colors.headerTitle\n  //   }\n  // };\n  return (\n    <div onClick={props.onClick}>\n      <div style={styles.screen}>\n        <div style={styles.text}>{props.title}</div>\n      </div>\n    </div>\n  );\n}\n\n","import React, { useContext } from \"react\";\nimport SourceButton from \"../components/SourceButton\";\nimport WebContext from \"../components/WebContext\";\n\n\nexport default function SelectSourceScreen() {\n  const context = useContext(WebContext);\n\n  const styles = {\n    screen: {\n      \n    }\n  };\n\n  function sourceClickHandler(source) {\n    context.setCurrentScreen(\"RequestsList\");\n    context.setSource(source);\n  }\n\n  const sourceElements = context.sources.map(s => (\n    <SourceButton\n      title={s}\n      onClick={sourceClickHandler.bind(this, s)}\n      key={s}\n    />\n  ));\n  return (\n    <div style={styles.screen}>\n      {sourceElements}\n    </div>\n  );\n\n}\n\n\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport WebContext from \"../components/WebContext\";\nimport * as ajax from \"../ajax\";\nimport * as dbCalls from \"../db\"\n\nexport default function RequestContextScreen(props) {\n  const context = useContext(WebContext);\n  const videoRef = useRef();\n\n  // At the beginning get video\n  useEffect(() => {\n    async function getVideo() {\n      const videoBlob = await dbCalls.getVideo(context.currentRequest.id);\n      console.log(\"videoBlob\", videoBlob)\n      videoRef.current.src = window.URL.createObjectURL(videoBlob);\n    }\n    if (videoRef.current) getVideo();\n  }, [context.currentRequest.id]);\n \n  const styles = {\n    screen: {\n      backgroundColor: context.currentRequest.type === \"Youtube\" ? \"black\" : \"white\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100%\",\n    },\n  \n    title: {\n      fontSize: 16\n    }\n  };\n\n  // Definition of content\n  let content = null;\n\n  // For youtube, embed video\n\n  if (context.currentRequest.type === \"Youtube\") content = (\n    <video width=\"100%\" controls ref={videoRef}/>\n  );\n\n  // For wikitravel, embed HTML  \n  if (context.currentRequest.type === \"Wikitravel\") {\n    const link = context.currentRequest.links.filter(item => item.indexOf(\"index.html\")>=0)[0];\n    content = <a href={ajax.serverURL + link}> Go to resource </a>\n  }\n\n  return (\n    <div style={styles.screen}>\n      {content}\n    </div>\n  );\n}\n\n\n","import React, { useContext } from \"react\";\nimport WebContext from \"./WebContext\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport * as dbCalls from \"../db\";\n\nexport default function RequestDisplay(props) {\n\n  const context = useContext(WebContext);\n\n  function detailRequestHandler() {\n    if (props.downloaded) {\n      context.setCurrentScreen(\"RequestContent\");\n      context.setCurrentRequest(props.request);\n    }\n  }\n\n  function removeRequestHandler() {\n    context.dispatchAllRequests({ type: \"remove\", reqId: props.request.id })\n    dbCalls.removeRequestElement(props.request.id);\n    if (props.request.status === \"downloadedLocally\") {\n      dbCalls.removeContent(props.request.id);\n    }\n  }\n\n  return (\n    <div style={styles.screen}>\n      <div style={styles.firstColumn} onClick={detailRequestHandler}>\n        <div style={styles.infos}>\n          {props.request.id} / {props.request.mode} / {props.request.status}\n        </div>\n        <div style={styles.query}>{props.request.query}</div>\n      </div>\n      <div onClick={removeRequestHandler}>\n        <Delete size={30} style={{ color: \"pink\" }} />\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  screen: {\n    padding: \"1%\",\n    margin: \"2%\",\n    maxWidth: \"90%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n\n  firstColumn: {\n    flexGrow: 1,\n    marginRight: \"5%\",\n    maxWidth: \"90%\",\n    borderBottomColor: \"grey\",\n    borderBottomWidth: 1\n  },\n\n  infos: {\n    color: \"grey\",\n    fontSize: 12,\n  },\n\n  query: {\n    fontWeight: \"bold\",\n    marginHorizontal: \"2vw\",\n    fontSize: 16,\n    marginVertical: \"1%\",\n    maxWidth: \"100vw\",\n  }\n\n\n\n};\n\n\n\n\n\n// const colors = {\n//   saved: {\n//     textColor: \"black\",\n//     backgroundColor: \"white\",\n//     borderColor: \"black\"\n//   },\n\n//   sent: {\n//     textColor: \"red\",\n//     backgroundColor: \"white\",\n//     borderColor: \"black\"\n//   },\n\n//   receivedServer : {\n//     textColor: \"orange\",\n//     backgroundColor: \"white\",\n//     borderColor: \"black\"\n//   },\n\n//   // greenish\n//   receivedLocal: {\n//     textColor: \"yellow\",\n//     backgroundColor: \"#3e9455\",\n//     borderColor: \"#235230\"\n//   },\n\n//   failure: {\n//     textColor: \"white\",\n//     backgroundColor: \"red\",\n//     borderColor: \"red\"\n//   }\n// };","import React, { useContext } from \"react\";\nimport WebContext from \"../components/WebContext\";\nimport RequestDisplay from \"../components/RequestDisplay\";\n\nexport default function RequestsListScreen(props) {\n  const context = useContext(WebContext);\n\n  function isDownloadedRequest(req) {\n    return (req.type === \"Youtube\" ? \n      req.status === \"downloadedLocally\" : \n      req.status === \"downloadedServer\");\n  }\n\n\n  let reqElements = context.allRequests\n    .filter(req => req.type === context.source)\n    .map(req => (\n      <RequestDisplay\n        request={req}\n        key={req.id}\n        downloaded={isDownloadedRequest(req)}\n      />\n    ));\n\n  return (\n    <div>\n      {reqElements}\n    </div>\n  );\n\n}\n\n","import React, { useState, useContext } from \"react\";\nimport WebContext from \"../components/WebContext\";\n\n// Material UI imports\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Switch from \"@material-ui/core/Switch\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default function AddRequestScreen(props) {\n  const [query, setQuery] = useState(\"\");\n  const [video, setVideo] = useState(false);\n  const [level, setLevel] = useState(0);\n\n  const context = useContext(WebContext);\n\n\n  // Add New request !\n  async function addRequestHandler() {\n    let mode = video ? 'video' : 'audio';\n\n    if (context.source === \"Wikitravel\") mode = level;\n\n    const nextRequestId =  context.getNextRequestId();\n    console.log(\"NextRequestId\", nextRequestId);\n\n    const request = {\n      user_id: context.userId,\n      id: context.getNextRequestId(),\n      query,\n      status: \"saved\",\n      type: context.source,\n      mode\n    };\n\n    // Add request to context\n    context.dispatchAllRequests({ type: \"add\", newReq: request });\n\n    // Go back\n    context.setCurrentScreen(\"RequestsList\");\n  }\n\n  // Video / Audio Switch \n  let videoSwitch = null;\n\n  if (context.source === \"Youtube\") {\n    videoSwitch = (\n      <div style={styles.video}>\n        <FormControlLabel\n          labelPlacement=\"start\"\n          label={video ? \"Video & Audio\" : \"Only Audio\"}\n          control={(\n            <Switch\n              checked={video}\n              onChange={() => setVideo(video => !video)}\n              value=\"video\"\n              color=\"primary\"\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n          )}\n\n        />\n\n      </div>\n    );\n  }\n\n  // Level for wikitravel\n  let levelSelect = null;\n  if (context.source === \"Wikitravel\") {\n    levelSelect = (\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\">Level</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={level}\n          onChange={e => setLevel(e.target.value)}\n        >\n          <MenuItem value=\"0\">0</MenuItem>\n          <MenuItem value=\"1\">1</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n\n  return (\n    <div style={styles.screen}>\n      <TextField\n        id=\"standard-basic\"\n        label=\"What are you looking for?\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      {videoSwitch}\n      {levelSelect}\n      <div style={styles.buttons}>\n        <Button color=\"secondary\" onClick={() => context.setCurrentScreen(\"RequestsList\")}>Cancel</Button>\n        <Button color=\"primary\" onClick={addRequestHandler}>Add Request</Button>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  screen: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: 200,\n    minHeight: \"50%\",\n    padding: \"10%\",\n    justifyContent: \"space-around\",\n  },\n\n  video: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginRight: \"3%\"\n  },\n\n  textInput: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"grey\",\n  },\n\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n\n  levelSelect: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n\n  levelPicker: {\n    width: \"29%\",\n    height: 20,\n  }\n};\n","import React, { useReducer, useState, useEffect } from \"react\";\nimport WebContext from \"./components/WebContext\";\nimport MainLayout from \"./components/MainLayout\";\nimport * as ajax from \"./ajax\";\nimport 'typeface-roboto';\nimport \"./App.css\";\nimport * as dbCalls from \"./db\";\n\n// Screens\nimport SelectSourceScreen from \"./screens/SelectSourceScreen\";\nimport RequestContentScreen from \"./screens/RequestContentScreen\";\nimport RequestsListScreen from \"./screens/RequestsListScreen\";\nimport AddRequestScreen from \"./screens/AddRequestScreen\";\n\nexport default function App() {\n\n  // Define values for context\n  const [allRequests, dispatchAllRequests] = useReducer(reducerReqs, []);\n  const [source, setSource] = useState(null);\n  const [currentScreen, setCurrentScreen] = useState(\"SelectSource\");\n  const [currentRequest, setCurrentRequest] = useState({});\n\n  const SCREENS = {\n    SelectSource: { screen: SelectSourceScreen, title: \"WebBackPack\" },\n    RequestsList: { screen: RequestsListScreen, title: source },\n    RequestContent: { screen: RequestContentScreen, title: currentRequest.query },\n    AddRequest: { screen: AddRequestScreen, title: \"Add \" + source }\n  }\n\n  function getNextRequestId() {\n    if (allRequests.length > 0) return Math.max(...allRequests.map(req => req.id)) + 1;\n    return 1;\n  }\n\n  const context = {\n    userId: \"Parvati\",\n    sources: [\"Youtube\", \"Wikitravel\"],\n    getNextRequestId,\n    allRequests,\n    dispatchAllRequests,\n    currentScreen,\n    setCurrentScreen,\n    source,\n    setSource,\n    setCurrentRequest,\n    currentRequest,\n  }\n\n  // ------------------------------------\n  // Effects for IndexedDb Manipulation\n  // ------------------------------------\n\n  // Initialize IndexedDB and load requests data\n  useEffect(() => {\n    async function initializeRequests() {\n      const requests = await dbCalls.initializeDB();\n      dispatchAllRequests({ type: \"init-requests\", requests });\n    }\n    initializeRequests();\n  }, []);\n\n  // Whenever allRequests change, backup all info about requests\n  useEffect(() => {\n    if (allRequests.length > 0) dbCalls.putAllRequestElements(allRequests);\n  }, [allRequests]);\n\n  // ------------------------------------\n  // ------------------------------------\n\n  // Send saved requests to server\n  useEffect(() => {\n    async function sendRequestsServer() {\n      const reqsOk = context.allRequests.filter(\n        req => req.status === \"saved\"\n      );\n      const promises = reqsOk.map(req => ajax.sendRequest(req));\n      const results = await Promise.all(promises);\n\n      results\n        .filter(res => \"server_request_id\" in res)\n        .forEach(res => {\n          dispatchAllRequests({\n            type: \"updateReceivedServer\",\n            serverRequest: res\n          });\n\n        })\n\n    }\n    sendRequestsServer();\n  });\n\n  // Whenever app rerenders, send requests to server to get content\n  useEffect(() => {\n    async function getContentRequests() {\n      // Ask for content for each request with status receivedServer\n      const reqsOk = context.allRequests.filter(\n        req => req.status === \"receivedServer\"\n      );\n      const promises = reqsOk.map(req => ajax.getContent(req));\n      const results = await Promise.all(promises);\n\n      results\n        .filter(item => item.status === \"OK\")\n        .forEach(item => {\n          dispatchAllRequests({\n            type: \"updateDownloaded\",\n            serverResponse: item\n          })\n        })\n\n    }\n    getContentRequests();\n  });\n\n  // Download data for youtube requests.status === downloadedServer\n  // Only when requests modified\n  useEffect(() => {\n    // For the moment, only youtube working\n    async function downloadYoutubeLocally() {\n      const reqs = allRequests\n        .filter(req => req.type === \"Youtube\" && req.status === \"downloadedServer\");\n\n      // console.log(\"downloading following requests\", reqs);\n\n      const promises = reqs.map(req => ajax.downloadYoutubeVideo(req));\n      const videos = await Promise.all(promises);\n      // console.log(\"videos\", videos);\n\n      // Add each video to indexedDB\n      reqs.forEach((req, counter) => dbCalls.putContentElement(req.id, videos[counter]));\n\n      // Change status of the request\n      reqs.forEach(req => dispatchAllRequests({ type: \"updateDownloadedLocally\", request: req }));\n    }\n    downloadYoutubeLocally();\n  }, [allRequests]);\n\n  // Main content definition\n  const MainContent = SCREENS[currentScreen].screen;\n\n  return (\n    <WebContext.Provider value={context}>\n      <MainLayout title={SCREENS[currentScreen].title}>\n        <MainContent />\n      </MainLayout>\n    </WebContext.Provider>\n  );\n}\n\n\nfunction reducerReqs(reqs, action) {\n  switch (action.type) {\n    case \"add\":\n      return [...reqs, action.newReq];\n    case \"remove\":\n      return reqs.filter(req => req.id !== action.reqId);\n    case \"init-requests\":\n      return [...action.requests];\n    case \"updateReceivedServer\":\n      const newRequest = { ...reqs.filter(req => req.id === action.serverRequest.id)[0] };\n      newRequest.server_request_id = action.serverRequest.server_request_id;\n      newRequest.status = \"receivedServer\";\n      return reqs.map(req => req.id === newRequest.id ? newRequest : req);\n    case \"updateDownloaded\":\n      const newRequest2 = { ...reqs.filter(req => req.server_request_id === action.serverResponse.server_request_id)[0] };\n      newRequest2.status = \"downloadedServer\";\n      newRequest2.links = action.serverResponse.links;\n      return reqs.map(req => (\n        req.server_request_id === action.serverResponse.server_request_id ?\n          newRequest2 :\n          req\n      ));\n    case \"updateDownloadedLocally\":\n      const newRequest3 = { ...action.request };\n      newRequest3.status = \"downloadedLocally\";\n      return reqs.map(req => req.id === newRequest3.id ? newRequest3 : req);\n    default:\n      throw Error(\"error in reducerReqs, App.js\");\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}